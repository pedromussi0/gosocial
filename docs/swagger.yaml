basePath: /v1
definitions:
  main.CreatePostPayLoad:
    properties:
      content:
        maxLength: 1000
        type: string
      tags:
        items:
          type: string
        type: array
      title:
        maxLength: 100
        type: string
    required:
    - content
    - title
    type: object
  main.FollowUser:
    properties:
      user_id:
        type: integer
    type: object
  main.UpdatePostPayload:
    properties:
      content:
        maxLength: 1000
        type: string
      title:
        maxLength: 100
        type: string
    type: object
  store.Comment:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      post_id:
        type: integer
      user:
        $ref: '#/definitions/store.User'
      user_id:
        type: integer
    type: object
  store.Post:
    properties:
      comments:
        items:
          $ref: '#/definitions/store.Comment'
        type: array
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      tags:
        items:
          type: string
        type: array
      title:
        type: string
      updated_at:
        type: string
      user:
        $ref: '#/definitions/store.User'
      user_id:
        type: integer
      version:
        type: integer
    type: object
  store.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      is_active:
        type: boolean
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: GoSocial API
paths:
  /posts:
    post:
      consumes:
      - application/json
      description: Create a new post
      parameters:
      - description: Create Post Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.CreatePostPayLoad'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/store.Post'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create a new post
      tags:
      - posts
  /posts/{postID}:
    delete:
      consumes:
      - application/json
      description: Delete a post
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete a post
      tags:
      - posts
    get:
      consumes:
      - application/json
      description: Get post by ID
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Post'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get post by ID
      tags:
      - posts
    put:
      consumes:
      - application/json
      description: Update a post
      parameters:
      - description: Post ID
        in: path
        name: postID
        required: true
        type: integer
      - description: Update Post Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.UpdatePostPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Post'
        "400":
          description: Bad Request
          schema: {}
        "409":
          description: Conflict
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update a post
      tags:
      - posts
  /users/{ID}:
    get:
      consumes:
      - application/json
      description: Get user by ID
      parameters:
      - description: User ID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.User'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get user by ID
      tags:
      - users
  /users/follow:
    post:
      consumes:
      - application/json
      description: Follow a user
      parameters:
      - description: Follow User Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.FollowUser'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema: {}
        "409":
          description: Conflict
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Follow a user
      tags:
      - users
  /users/unfollow:
    post:
      consumes:
      - application/json
      description: Unfollow a user
      parameters:
      - description: Unfollow User Payload
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/main.FollowUser'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema: {}
        "409":
          description: Conflict
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Unfollow a user
      tags:
      - users
swagger: "2.0"
